{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createStore } from 'vuex';\nimport axios from '../axiosConfig';\nconst store = createStore({\n  state: {\n    products: []\n  },\n  mutations: {\n    ADD_PRODUCT(state, product) {\n      state.products.push(product);\n    },\n    SET_PRODUCTS(state, products) {\n      state.products = products;\n    },\n    DELETE_PRODUCT(state, productId) {\n      const index = state.products.findIndex(product => product.id === productId);\n      if (index !== -1) {\n        state.products.splice(index, 1);\n      }\n    },\n    UPDATE_PRODUCT(state, updatedProduct) {\n      const index = state.products.findIndex(product => product.id === updatedProduct.id);\n      if (index !== -1) {\n        state.products.splice(index, 1, updatedProduct);\n      }\n    }\n  },\n  actions: {\n    // async createProduct({ commit }, product) {\n    //     const response = await axios.post('/api/products', product);\n    //     commit('ADD_PRODUCT', response.data);\n    //     return response.data;\n    // },\n    // async getProducts({ commit }) {\n    //     const response = await axios.get('/api/products');\n    //     commit('SET_PRODUCTS', response.data);\n    //     return response.data;\n    // },\n    // async deleteProduct({ commit }, productId) {\n    //     await axios.delete(`/api/products/${productId}`);\n    //     commit('DELETE_PRODUCT', productId);\n    // },\n    // async updateProduct({ commit }, product) {\n    //         const response = await axios.put(`/api/products/${product.id}`, product);\n    //         commit('UPDATE_PRODUCT', response.data);\n    //         return response.data;\n    // }\n  },\n  modules: {\n    // Your modules here\n  }\n});\nexport default store;","map":{"version":3,"names":["createStore","axios","store","state","products","mutations","ADD_PRODUCT","product","push","SET_PRODUCTS","DELETE_PRODUCT","productId","index","findIndex","id","splice","UPDATE_PRODUCT","updatedProduct","actions","modules"],"sources":["C:/xampp/htdocs/assessment_test/mystaff_frontend/store/index.js"],"sourcesContent":["import { createStore } from 'vuex';\r\nimport axios from '../axiosConfig';\r\n\r\nconst store = createStore({\r\n    state: {\r\n        products: []\r\n    },\r\n    mutations: {\r\n        ADD_PRODUCT(state, product) {\r\n            state.products.push(product);\r\n        },\r\n        SET_PRODUCTS(state, products) {\r\n            state.products = products;\r\n        },\r\n        DELETE_PRODUCT(state, productId) {\r\n            const index = state.products.findIndex(product => product.id === productId);\r\n            if (index !== -1) {\r\n                state.products.splice(index, 1);\r\n            }\r\n        },\r\n        UPDATE_PRODUCT(state, updatedProduct) {\r\n            const index = state.products.findIndex(product => product.id === updatedProduct.id);\r\n            if (index !== -1) {\r\n                state.products.splice(index, 1, updatedProduct);\r\n            }\r\n        }\r\n    },\r\n    actions: {\r\n        // async createProduct({ commit }, product) {\r\n        //     const response = await axios.post('/api/products', product);\r\n        //     commit('ADD_PRODUCT', response.data);\r\n        //     return response.data;\r\n        // },\r\n        // async getProducts({ commit }) {\r\n        //     const response = await axios.get('/api/products');\r\n        //     commit('SET_PRODUCTS', response.data);\r\n        //     return response.data;\r\n        // },\r\n        // async deleteProduct({ commit }, productId) {\r\n        //     await axios.delete(`/api/products/${productId}`);\r\n        //     commit('DELETE_PRODUCT', productId);\r\n        // },\r\n        // async updateProduct({ commit }, product) {\r\n        //         const response = await axios.put(`/api/products/${product.id}`, product);\r\n        //         commit('UPDATE_PRODUCT', response.data);\r\n        //         return response.data;\r\n        // }\r\n    },\r\n    modules: {\r\n        // Your modules here\r\n    }\r\n});\r\n\r\nexport default store;\r\n"],"mappings":";AAAA,SAASA,WAAW,QAAQ,MAAM;AAClC,OAAOC,KAAK,MAAM,gBAAgB;AAElC,MAAMC,KAAK,GAAGF,WAAW,CAAC;EACtBG,KAAK,EAAE;IACHC,QAAQ,EAAE;EACd,CAAC;EACDC,SAAS,EAAE;IACPC,WAAWA,CAACH,KAAK,EAAEI,OAAO,EAAE;MACxBJ,KAAK,CAACC,QAAQ,CAACI,IAAI,CAACD,OAAO,CAAC;IAChC,CAAC;IACDE,YAAYA,CAACN,KAAK,EAAEC,QAAQ,EAAE;MAC1BD,KAAK,CAACC,QAAQ,GAAGA,QAAQ;IAC7B,CAAC;IACDM,cAAcA,CAACP,KAAK,EAAEQ,SAAS,EAAE;MAC7B,MAAMC,KAAK,GAAGT,KAAK,CAACC,QAAQ,CAACS,SAAS,CAACN,OAAO,IAAIA,OAAO,CAACO,EAAE,KAAKH,SAAS,CAAC;MAC3E,IAAIC,KAAK,KAAK,CAAC,CAAC,EAAE;QACdT,KAAK,CAACC,QAAQ,CAACW,MAAM,CAACH,KAAK,EAAE,CAAC,CAAC;MACnC;IACJ,CAAC;IACDI,cAAcA,CAACb,KAAK,EAAEc,cAAc,EAAE;MAClC,MAAML,KAAK,GAAGT,KAAK,CAACC,QAAQ,CAACS,SAAS,CAACN,OAAO,IAAIA,OAAO,CAACO,EAAE,KAAKG,cAAc,CAACH,EAAE,CAAC;MACnF,IAAIF,KAAK,KAAK,CAAC,CAAC,EAAE;QACdT,KAAK,CAACC,QAAQ,CAACW,MAAM,CAACH,KAAK,EAAE,CAAC,EAAEK,cAAc,CAAC;MACnD;IACJ;EACJ,CAAC;EACDC,OAAO,EAAE;IACL;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAAA,CACH;EACDC,OAAO,EAAE;IACL;EAAA;AAER,CAAC,CAAC;AAEF,eAAejB,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}