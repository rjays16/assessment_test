{"ast":null,"code":"import { ref } from 'vue';\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\nexport default {\n  setup() {\n    const isModalVisible = ref(false);\n    const videoFile = ref(null);\n    const showModal = () => {\n      isModalVisible.value = true;\n    };\n    const handleSubmit = async () => {\n      try {\n        const formData = new FormData();\n        formData.append('video', videoFile.value);\n        const response = await axios.post('/api/videos', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          },\n          onUploadProgress: progressEvent => {\n            const percentCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n            console.log('Upload progress: ', percentCompleted);\n          }\n        });\n        Swal.fire({\n          icon: 'success',\n          title: 'Success',\n          text: response.data.message,\n          confirmButtonText: 'OK'\n        });\n        resetForm();\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Error',\n          text: error.response?.data?.message || 'An error occurred'\n        });\n      }\n    };\n    const resetForm = () => {\n      videoFile.value = null;\n      isModalVisible.value = false;\n    };\n    return {\n      isModalVisible,\n      videoFile,\n      showModal,\n      handleSubmit,\n      resetForm\n    };\n  }\n};","map":{"version":3,"names":["ref","axios","Swal","setup","isModalVisible","videoFile","showModal","value","handleSubmit","formData","FormData","append","response","post","headers","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","total","console","log","fire","icon","title","text","data","message","confirmButtonText","resetForm","error"],"sources":["C:\\xampp\\htdocs\\assessment_test\\mystaff_frontend\\src\\components\\Modal\\AddModal.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <b-button @click=\"showModal\">Add New Product</b-button>\r\n    <b-modal id=\"add-product-modal\" v-model=\"isModalVisible\" title=\"Add New Product\" @ok=\"handleSubmit\">\r\n      <b-form @submit.stop.prevent=\"handleSubmit\">\r\n        <b-form-group label=\"Video\" label-for=\"product-video\">\r\n          <b-form-file id=\"product-video\" v-model=\"videoFile\" required></b-form-file>\r\n        </b-form-group>\r\n      </b-form>\r\n    </b-modal>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from 'vue';\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport default {\r\n  setup() {\r\n    const isModalVisible = ref(false);\r\n    const videoFile = ref(null);\r\n\r\n    const showModal = () => {\r\n      isModalVisible.value = true;\r\n    };\r\n\r\n    const handleSubmit = async () => {\r\n      try {\r\n        const formData = new FormData();\r\n        formData.append('video', videoFile.value);\r\n\r\n        const response = await axios.post('/api/videos', formData, {\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data'\r\n          },\r\n          onUploadProgress: progressEvent => {\r\n            const percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\r\n            console.log('Upload progress: ', percentCompleted);\r\n          }\r\n        });\r\n\r\n        Swal.fire({\r\n          icon: 'success',\r\n          title: 'Success',\r\n          text: response.data.message,\r\n          confirmButtonText: 'OK',\r\n        });\r\n        resetForm();\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Error',\r\n          text: error.response?.data?.message || 'An error occurred'\r\n        });\r\n      }\r\n    };\r\n\r\n    const resetForm = () => {\r\n      videoFile.value = null;\r\n      isModalVisible.value = false;\r\n    };\r\n\r\n    return {\r\n      isModalVisible,\r\n      videoFile,\r\n      showModal,\r\n      handleSubmit,\r\n      resetForm,\r\n    };\r\n  }\r\n};\r\n</script>\r\n"],"mappings":"AAcA,SAASA,GAAE,QAAS,KAAK;AACzB,OAAOC,KAAI,MAAO,OAAO;AACzB,OAAOC,IAAG,MAAO,aAAa;AAE9B,eAAe;EACbC,KAAKA,CAAA,EAAG;IACN,MAAMC,cAAa,GAAIJ,GAAG,CAAC,KAAK,CAAC;IACjC,MAAMK,SAAQ,GAAIL,GAAG,CAAC,IAAI,CAAC;IAE3B,MAAMM,SAAQ,GAAIA,CAAA,KAAM;MACtBF,cAAc,CAACG,KAAI,GAAI,IAAI;IAC7B,CAAC;IAED,MAAMC,YAAW,GAAI,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,QAAO,GAAI,IAAIC,QAAQ,CAAC,CAAC;QAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEN,SAAS,CAACE,KAAK,CAAC;QAEzC,MAAMK,QAAO,GAAI,MAAMX,KAAK,CAACY,IAAI,CAAC,aAAa,EAAEJ,QAAQ,EAAE;UACzDK,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,gBAAgB,EAAEC,aAAY,IAAK;YACjC,MAAMC,gBAAe,GAAIC,IAAI,CAACC,KAAK,CAAEH,aAAa,CAACI,MAAK,GAAI,GAAG,GAAIJ,aAAa,CAACK,KAAK,CAAC;YACvFC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEN,gBAAgB,CAAC;UACpD;QACF,CAAC,CAAC;QAEFf,IAAI,CAACsB,IAAI,CAAC;UACRC,IAAI,EAAE,SAAS;UACfC,KAAK,EAAE,SAAS;UAChBC,IAAI,EAAEf,QAAQ,CAACgB,IAAI,CAACC,OAAO;UAC3BC,iBAAiB,EAAE;QACrB,CAAC,CAAC;QACFC,SAAS,CAAC,CAAC;MACb,EAAE,OAAOC,KAAK,EAAE;QACd9B,IAAI,CAACsB,IAAI,CAAC;UACRC,IAAI,EAAE,OAAO;UACbC,KAAK,EAAE,OAAO;UACdC,IAAI,EAAEK,KAAK,CAACpB,QAAQ,EAAEgB,IAAI,EAAEC,OAAM,IAAK;QACzC,CAAC,CAAC;MACJ;IACF,CAAC;IAED,MAAME,SAAQ,GAAIA,CAAA,KAAM;MACtB1B,SAAS,CAACE,KAAI,GAAI,IAAI;MACtBH,cAAc,CAACG,KAAI,GAAI,KAAK;IAC9B,CAAC;IAED,OAAO;MACLH,cAAc;MACdC,SAAS;MACTC,SAAS;MACTE,YAAY;MACZuB;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}