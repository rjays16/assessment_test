{"ast":null,"code":"import Swal from 'sweetalert2';\nimport axios from '../../../axiosConfig'; // Update the path according to your file structure\nimport { UploadHandler } from 'blueimp-file-upload';\nexport default {\n  data() {\n    return {\n      newVideo: {\n        title: '',\n        videoFile: null\n      },\n      isModalVisible: false,\n      videoError: ''\n    };\n  },\n  methods: {\n    showModal() {\n      this.isModalVisible = true;\n    },\n    async handleSubmit() {\n      if (!this.newVideo.videoFile) {\n        this.videoError = 'Please upload a valid video file.';\n        return;\n      }\n      const file = this.newVideo.videoFile;\n      const formData = new FormData();\n      formData.append('title', this.newVideo.title);\n      const token = localStorage.getItem('token');\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      const uploadHandler = new UploadHandler({\n        url: 'http://assessment.api/api/videos',\n        file,\n        formData,\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        onProgress: (e, data) => {\n          const percentCompleted = Math.round(data.loaded * 100 / data.total);\n          console.log('Upload progress: ', percentCompleted);\n        },\n        done: (e, data) => {\n          Swal.fire({\n            icon: 'success',\n            title: 'Success',\n            text: 'Video uploaded successfully!',\n            confirmButtonText: 'OK'\n          });\n          this.resetForm();\n        },\n        fail: (e, data) => {\n          Swal.fire({\n            icon: 'error',\n            title: 'Error',\n            text: data.jqXHR.responseJSON.message || 'An error occurred'\n          });\n        }\n      });\n      uploadHandler.send();\n    },\n    handleFileUpload(event) {\n      const file = event.target.files[0];\n      const validVideoTypes = ['video/mp4', 'video/avi', 'video/mkv', 'video/mov', 'video/webm'];\n      if (file && validVideoTypes.includes(file.type)) {\n        this.newVideo.videoFile = file;\n        this.videoError = '';\n      } else {\n        this.newVideo.videoFile = null;\n        this.videoError = 'Please upload a valid video file.';\n      }\n    },\n    resetForm() {\n      this.newVideo = {\n        title: '',\n        videoFile: null\n      };\n      this.videoError = '';\n      this.isModalVisible = false;\n    }\n  }\n};","map":{"version":3,"names":["Swal","axios","UploadHandler","data","newVideo","title","videoFile","isModalVisible","videoError","methods","showModal","handleSubmit","file","formData","FormData","append","token","localStorage","getItem","defaults","headers","common","uploadHandler","url","onProgress","e","percentCompleted","Math","round","loaded","total","console","log","done","fire","icon","text","confirmButtonText","resetForm","fail","jqXHR","responseJSON","message","send","handleFileUpload","event","target","files","validVideoTypes","includes","type"],"sources":["C:\\xampp\\htdocs\\assessment_test\\mystaff_frontend\\src\\components\\Modal\\AddModal.vue"],"sourcesContent":["<template>\r\n  <b-modal id=\"add-video-modal\" v-model=\"isModalVisible\" title=\"Add New Video\" @ok=\"handleSubmit\">\r\n    <b-form @submit.stop.prevent=\"handleSubmit\">\r\n      <b-form-group label=\"Title\" label-for=\"video-title\">\r\n        <b-form-input id=\"video-title\" v-model=\"newVideo.title\" required></b-form-input>\r\n      </b-form-group>\r\n      <b-form-group label=\"Video\" label-for=\"video\">\r\n        <input id=\"video\" type=\"file\" @change=\"handleFileUpload\" required>\r\n        <small class=\"text-danger\" v-if=\"videoError\"><br>{{ videoError }}</small>\r\n      </b-form-group>\r\n    </b-form>\r\n  </b-modal>\r\n</template>\r\n\r\n<script>\r\nimport Swal from 'sweetalert2';\r\nimport axios from '../../../axiosConfig'; // Update the path according to your file structure\r\nimport { UploadHandler } from 'blueimp-file-upload';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      newVideo: {\r\n        title: '',\r\n        videoFile: null,\r\n      },\r\n      isModalVisible: false,\r\n      videoError: ''\r\n    };\r\n  },\r\n  methods: {\r\n    showModal() {\r\n      this.isModalVisible = true;\r\n    },\r\n    async handleSubmit() {\r\n      if (!this.newVideo.videoFile) {\r\n        this.videoError = 'Please upload a valid video file.';\r\n        return;\r\n      }\r\n\r\n      const file = this.newVideo.videoFile;\r\n      const formData = new FormData();\r\n      formData.append('title', this.newVideo.title);\r\n\r\n      const token = localStorage.getItem('token');\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n\r\n      const uploadHandler = new UploadHandler({\r\n        url: 'http://assessment.api/api/videos',\r\n        file,\r\n        formData,\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        },\r\n        onProgress: (e, data) => {\r\n          const percentCompleted = Math.round((data.loaded * 100) / data.total);\r\n          console.log('Upload progress: ', percentCompleted);\r\n        },\r\n        done: (e, data) => {\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Success',\r\n            text: 'Video uploaded successfully!',\r\n            confirmButtonText: 'OK',\r\n          });\r\n          this.resetForm();\r\n        },\r\n        fail: (e, data) => {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Error',\r\n            text: data.jqXHR.responseJSON.message || 'An error occurred'\r\n          });\r\n        }\r\n      });\r\n\r\n      uploadHandler.send();\r\n    },\r\n    handleFileUpload(event) {\r\n      const file = event.target.files[0];\r\n      const validVideoTypes = ['video/mp4', 'video/avi', 'video/mkv', 'video/mov', 'video/webm'];\r\n\r\n      if (file && validVideoTypes.includes(file.type)) {\r\n        this.newVideo.videoFile = file;\r\n        this.videoError = '';\r\n      } else {\r\n        this.newVideo.videoFile = null;\r\n        this.videoError = 'Please upload a valid video file.';\r\n      }\r\n    },\r\n    resetForm() {\r\n      this.newVideo = {\r\n        title: '',\r\n        videoFile: null,\r\n      };\r\n      this.videoError = '';\r\n      this.isModalVisible = false;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.text-danger {\r\n  color: #dc3545;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}