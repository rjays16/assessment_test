{"ast":null,"code":"import { ref } from 'vue';\nimport Swal from 'sweetalert2';\nimport axios from 'axios';\nexport default {\n  setup() {\n    const newProduct = ref({\n      title: '',\n      description: '',\n      due_date: '',\n      status: ''\n    });\n    const statusOptions = ref([{\n      value: '1',\n      text: 'Active'\n    }, {\n      value: '0',\n      text: 'Expired'\n    }]);\n    const videoFile = ref(null);\n    const isModalVisible = ref(false);\n    const showModal = () => {\n      isModalVisible.value = true;\n    };\n    const handleSubmit = async () => {\n      try {\n        const formData = new FormData();\n        formData.append('title', newProduct.value.title);\n        formData.append('description', newProduct.value.description);\n        formData.append('due_date', newProduct.value.due_date);\n        formData.append('status', newProduct.value.status);\n        formData.append('video', videoFile.value);\n        const response = await axios.post('/api/videos', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          },\n          onUploadProgress: progressEvent => {\n            const percentCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n            console.log('Upload progress: ', percentCompleted);\n          }\n        });\n        Swal.fire({\n          icon: 'success',\n          title: 'Success',\n          text: response.data.message,\n          confirmButtonText: 'OK'\n        });\n        resetForm();\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Error',\n          text: error.response?.data?.message || 'An error occurred'\n        });\n      }\n    };\n    const resetForm = () => {\n      newProduct.value = {\n        title: '',\n        description: '',\n        due_date: '',\n        status: ''\n      };\n      videoFile.value = null;\n      isModalVisible.value = false;\n    };\n    return {\n      newProduct,\n      statusOptions,\n      videoFile,\n      isModalVisible,\n      showModal,\n      handleSubmit,\n      resetForm\n    };\n  }\n};","map":{"version":3,"names":["ref","Swal","axios","setup","newProduct","title","description","due_date","status","statusOptions","value","text","videoFile","isModalVisible","showModal","handleSubmit","formData","FormData","append","response","post","headers","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","total","console","log","fire","icon","data","message","confirmButtonText","resetForm","error"],"sources":["C:\\xampp\\htdocs\\assessment_test\\mystaff_frontend\\src\\components\\Modal\\AddModal.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <b-button @click=\"showModal\">Add New Product</b-button>\r\n    <b-modal id=\"add-product-modal\" v-model=\"isModalVisible\" title=\"Add New Product\" @ok=\"handleSubmit\">\r\n      <b-form @submit.stop.prevent=\"handleSubmit\">\r\n        <b-form-group label=\"Title\" label-for=\"product-title\">\r\n          <b-form-input id=\"product-title\" v-model=\"newProduct.title\" required></b-form-input>\r\n        </b-form-group>\r\n        <b-form-group label=\"Description\" label-for=\"product-description\">\r\n          <b-form-input id=\"product-description\" v-model=\"newProduct.description\" required></b-form-input>\r\n        </b-form-group>\r\n        <b-form-group label=\"Due Date\" label-for=\"product-due-date\">\r\n          <b-form-input id=\"product-due-date\" v-model=\"newProduct.due_date\" type=\"date\" required></b-form-input>\r\n        </b-form-group>\r\n        <b-form-group label=\"Status\" label-for=\"product-status\">\r\n          <b-form-select id=\"product-status\" v-model=\"newProduct.status\" :options=\"statusOptions\" required></b-form-select>\r\n        </b-form-group>\r\n        <b-form-group label=\"Video\" label-for=\"product-video\">\r\n          <b-form-file id=\"product-video\" v-model=\"videoFile\" required></b-form-file>\r\n        </b-form-group>\r\n      </b-form>\r\n    </b-modal>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from 'vue';\r\nimport Swal from 'sweetalert2';\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  setup() {\r\n    const newProduct = ref({\r\n      title: '',\r\n      description: '',\r\n      due_date: '',\r\n      status: ''\r\n    });\r\n    const statusOptions = ref([\r\n      { value: '1', text: 'Active' },\r\n      { value: '0', text: 'Expired' }\r\n    ]);\r\n    const videoFile = ref(null);\r\n    const isModalVisible = ref(false);\r\n\r\n    const showModal = () => {\r\n      isModalVisible.value = true;\r\n    };\r\n\r\n    const handleSubmit = async () => {\r\n      try {\r\n        const formData = new FormData();\r\n        formData.append('title', newProduct.value.title);\r\n        formData.append('description', newProduct.value.description);\r\n        formData.append('due_date', newProduct.value.due_date);\r\n        formData.append('status', newProduct.value.status);\r\n        formData.append('video', videoFile.value);\r\n\r\n        const response = await axios.post('/api/videos', formData, {\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data'\r\n          },\r\n          onUploadProgress: progressEvent => {\r\n            const percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\r\n            console.log('Upload progress: ', percentCompleted);\r\n          }\r\n        });\r\n\r\n        Swal.fire({\r\n          icon: 'success',\r\n          title: 'Success',\r\n          text: response.data.message,\r\n          confirmButtonText: 'OK',\r\n        });\r\n        resetForm();\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Error',\r\n          text: error.response?.data?.message || 'An error occurred'\r\n        });\r\n      }\r\n    };\r\n\r\n    const resetForm = () => {\r\n      newProduct.value = {\r\n        title: '',\r\n        description: '',\r\n        due_date: '',\r\n        status: ''\r\n      };\r\n      videoFile.value = null;\r\n      isModalVisible.value = false;\r\n    };\r\n\r\n    return {\r\n      newProduct,\r\n      statusOptions,\r\n      videoFile,\r\n      isModalVisible,\r\n      showModal,\r\n      handleSubmit,\r\n      resetForm\r\n    };\r\n  }\r\n};\r\n</script>\r\n"],"mappings":"AA0BA,SAASA,GAAE,QAAS,KAAK;AACzB,OAAOC,IAAG,MAAO,aAAa;AAC9B,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,KAAKA,CAAA,EAAG;IACN,MAAMC,UAAS,GAAIJ,GAAG,CAAC;MACrBK,KAAK,EAAE,EAAE;MACTC,WAAW,EAAE,EAAE;MACfC,QAAQ,EAAE,EAAE;MACZC,MAAM,EAAE;IACV,CAAC,CAAC;IACF,MAAMC,aAAY,GAAIT,GAAG,CAAC,CACxB;MAAEU,KAAK,EAAE,GAAG;MAAEC,IAAI,EAAE;IAAS,CAAC,EAC9B;MAAED,KAAK,EAAE,GAAG;MAAEC,IAAI,EAAE;IAAU,EAC/B,CAAC;IACF,MAAMC,SAAQ,GAAIZ,GAAG,CAAC,IAAI,CAAC;IAC3B,MAAMa,cAAa,GAAIb,GAAG,CAAC,KAAK,CAAC;IAEjC,MAAMc,SAAQ,GAAIA,CAAA,KAAM;MACtBD,cAAc,CAACH,KAAI,GAAI,IAAI;IAC7B,CAAC;IAED,MAAMK,YAAW,GAAI,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,QAAO,GAAI,IAAIC,QAAQ,CAAC,CAAC;QAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEd,UAAU,CAACM,KAAK,CAACL,KAAK,CAAC;QAChDW,QAAQ,CAACE,MAAM,CAAC,aAAa,EAAEd,UAAU,CAACM,KAAK,CAACJ,WAAW,CAAC;QAC5DU,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEd,UAAU,CAACM,KAAK,CAACH,QAAQ,CAAC;QACtDS,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAEd,UAAU,CAACM,KAAK,CAACF,MAAM,CAAC;QAClDQ,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEN,SAAS,CAACF,KAAK,CAAC;QAEzC,MAAMS,QAAO,GAAI,MAAMjB,KAAK,CAACkB,IAAI,CAAC,aAAa,EAAEJ,QAAQ,EAAE;UACzDK,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,gBAAgB,EAAEC,aAAY,IAAK;YACjC,MAAMC,gBAAe,GAAIC,IAAI,CAACC,KAAK,CAAEH,aAAa,CAACI,MAAK,GAAI,GAAG,GAAIJ,aAAa,CAACK,KAAK,CAAC;YACvFC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEN,gBAAgB,CAAC;UACpD;QACF,CAAC,CAAC;QAEFvB,IAAI,CAAC8B,IAAI,CAAC;UACRC,IAAI,EAAE,SAAS;UACf3B,KAAK,EAAE,SAAS;UAChBM,IAAI,EAAEQ,QAAQ,CAACc,IAAI,CAACC,OAAO;UAC3BC,iBAAiB,EAAE;QACrB,CAAC,CAAC;QACFC,SAAS,CAAC,CAAC;MACb,EAAE,OAAOC,KAAK,EAAE;QACdpC,IAAI,CAAC8B,IAAI,CAAC;UACRC,IAAI,EAAE,OAAO;UACb3B,KAAK,EAAE,OAAO;UACdM,IAAI,EAAE0B,KAAK,CAAClB,QAAQ,EAAEc,IAAI,EAAEC,OAAM,IAAK;QACzC,CAAC,CAAC;MACJ;IACF,CAAC;IAED,MAAME,SAAQ,GAAIA,CAAA,KAAM;MACtBhC,UAAU,CAACM,KAAI,GAAI;QACjBL,KAAK,EAAE,EAAE;QACTC,WAAW,EAAE,EAAE;QACfC,QAAQ,EAAE,EAAE;QACZC,MAAM,EAAE;MACV,CAAC;MACDI,SAAS,CAACF,KAAI,GAAI,IAAI;MACtBG,cAAc,CAACH,KAAI,GAAI,KAAK;IAC9B,CAAC;IAED,OAAO;MACLN,UAAU;MACVK,aAAa;MACbG,SAAS;MACTC,cAAc;MACdC,SAAS;MACTC,YAAY;MACZqB;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}