{"ast":null,"code":"import axios from 'axios';\nimport AuthService from './AuthService';\nconst instance = axios.create({\n  baseURL: process.env.VUE_APP_BASE_URL || 'http://localhost:8080'\n});\n\n// Add a request interceptor\ninstance.interceptors.request.use(config => {\n  const token = AuthService.getToken();\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\nexport default instance;","map":{"version":3,"names":["axios","AuthService","instance","create","baseURL","process","env","VUE_APP_BASE_URL","interceptors","request","use","config","token","getToken","headers","Authorization","error","Promise","reject"],"sources":["C:/xampp/htdocs/assessment_test/mystaff_frontend/axiosConfig.js"],"sourcesContent":["import axios from 'axios';\r\nimport AuthService from './AuthService';\r\n\r\nconst instance = axios.create({\r\n  baseURL: process.env.VUE_APP_BASE_URL || 'http://localhost:8080',\r\n});\r\n\r\n// Add a request interceptor\r\ninstance.interceptors.request.use(\r\n  config => {\r\n    const token = AuthService.getToken();\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  error => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default instance;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,eAAe;AAEvC,MAAMC,QAAQ,GAAGF,KAAK,CAACG,MAAM,CAAC;EAC5BC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,gBAAgB,IAAI;AAC3C,CAAC,CAAC;;AAEF;AACAL,QAAQ,CAACM,YAAY,CAACC,OAAO,CAACC,GAAG,CAC/BC,MAAM,IAAI;EACR,MAAMC,KAAK,GAAGX,WAAW,CAACY,QAAQ,CAAC,CAAC;EACpC,IAAID,KAAK,EAAE;IACTD,MAAM,CAACG,OAAO,CAACC,aAAa,GAAI,UAASH,KAAM,EAAC;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACDK,KAAK,IAAI;EACP,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAed,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}