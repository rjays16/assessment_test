{"ast":null,"code":"import Swal from 'sweetalert2';\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      newProduct: {\n        title: '',\n        description: '',\n        due_date: '',\n        status: ''\n      },\n      statusOptions: [{\n        value: '1',\n        text: 'Active'\n      }, {\n        value: '0',\n        text: 'Expired'\n      }],\n      videoFile: null,\n      isModalVisible: false\n    };\n  },\n  methods: {\n    showModal() {\n      this.isModalVisible = true;\n    },\n    async handleSubmit() {\n      try {\n        const formData = new FormData();\n        formData.append('title', this.newProduct.title);\n        formData.append('description', this.newProduct.description);\n        formData.append('due_date', this.newProduct.due_date);\n        formData.append('status', this.newProduct.status);\n        formData.append('video', this.videoFile);\n        const response = await axios.post('/api/videos', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          },\n          onUploadProgress: progressEvent => {\n            const percentCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n            console.log('Upload progress: ', percentCompleted);\n          }\n        });\n        Swal.fire({\n          icon: 'success',\n          title: 'Success',\n          text: response.data.message,\n          confirmButtonText: 'OK'\n        });\n        this.resetForm();\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Error',\n          text: error.response?.data?.message || 'An error occurred'\n        });\n      }\n    },\n    handleFileUpload(event) {\n      this.videoFile = event.target.files[0];\n    },\n    resetForm() {\n      this.newProduct = {\n        title: '',\n        description: '',\n        due_date: '',\n        status: ''\n      };\n      this.videoFile = null;\n      this.isModalVisible = false;\n    }\n  }\n};","map":{"version":3,"names":["Swal","axios","data","newProduct","title","description","due_date","status","statusOptions","value","text","videoFile","isModalVisible","methods","showModal","handleSubmit","formData","FormData","append","response","post","headers","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","total","console","log","fire","icon","message","confirmButtonText","resetForm","error","handleFileUpload","event","target","files"],"sources":["C:\\xampp\\htdocs\\assessment_test\\mystaff_frontend\\src\\components\\Modal\\AddModal.vue"],"sourcesContent":["<template>\r\n  <b-modal id=\"add-video-modal\" v-model=\"isModalVisible\" title=\"Add New Video\" @ok=\"handleSubmit\">\r\n    <b-form @submit.stop.prevent=\"handleSubmit\">\r\n      <b-form-group label=\"Title\" label-for=\"vidoe-title\">\r\n        <b-form-input id=\"product-title\" v-model=\"newVideo.title\" required></b-form-input>\r\n      </b-form-group>\r\n      <b-form-group label=\"Video\" label-for=\"product-video\">\r\n        <input id=\"product-video\" type=\"file\" @change=\"handleFileUpload\" required>\r\n      </b-form-group>\r\n    </b-form>\r\n  </b-modal>\r\n</template>\r\n\r\n<script>\r\nimport Swal from 'sweetalert2';\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      newProduct: {\r\n        title: '',\r\n        description: '',\r\n        due_date: '',\r\n        status: ''\r\n      },\r\n      statusOptions: [\r\n        { value: '1', text: 'Active' },\r\n        { value: '0', text: 'Expired' }\r\n      ],\r\n      videoFile: null,\r\n      isModalVisible: false,\r\n    };\r\n  },\r\n  methods: {\r\n    showModal() {\r\n      this.isModalVisible = true;\r\n    },\r\n    async handleSubmit() {\r\n      try {\r\n        const formData = new FormData();\r\n        formData.append('title', this.newProduct.title);\r\n        formData.append('description', this.newProduct.description);\r\n        formData.append('due_date', this.newProduct.due_date);\r\n        formData.append('status', this.newProduct.status);\r\n        formData.append('video', this.videoFile);\r\n\r\n        const response = await axios.post('/api/videos', formData, {\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data'\r\n          },\r\n          onUploadProgress: progressEvent => {\r\n            const percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\r\n            console.log('Upload progress: ', percentCompleted);\r\n          }\r\n        });\r\n\r\n        Swal.fire({\r\n          icon: 'success',\r\n          title: 'Success',\r\n          text: response.data.message,\r\n          confirmButtonText: 'OK',\r\n        });\r\n        this.resetForm();\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Error',\r\n          text: error.response?.data?.message || 'An error occurred'\r\n        });\r\n      }\r\n    },\r\n    handleFileUpload(event) {\r\n    this.videoFile = event.target.files[0];\r\n  },\r\n    resetForm() {\r\n      this.newProduct = {\r\n        title: '',\r\n        description: '',\r\n        due_date: '',\r\n        status: ''\r\n      };\r\n      this.videoFile = null;\r\n      this.isModalVisible = false;\r\n    }\r\n  }\r\n};\r\n</script>\r\n"],"mappings":"AAcA,OAAOA,IAAG,MAAO,aAAa;AAC9B,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,UAAU,EAAE;QACVC,KAAK,EAAE,EAAE;QACTC,WAAW,EAAE,EAAE;QACfC,QAAQ,EAAE,EAAE;QACZC,MAAM,EAAE;MACV,CAAC;MACDC,aAAa,EAAE,CACb;QAAEC,KAAK,EAAE,GAAG;QAAEC,IAAI,EAAE;MAAS,CAAC,EAC9B;QAAED,KAAK,EAAE,GAAG;QAAEC,IAAI,EAAE;MAAU,EAC/B;MACDC,SAAS,EAAE,IAAI;MACfC,cAAc,EAAE;IAClB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,SAASA,CAAA,EAAG;MACV,IAAI,CAACF,cAAa,GAAI,IAAI;IAC5B,CAAC;IACD,MAAMG,YAAYA,CAAA,EAAG;MACnB,IAAI;QACF,MAAMC,QAAO,GAAI,IAAIC,QAAQ,CAAC,CAAC;QAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAE,IAAI,CAACf,UAAU,CAACC,KAAK,CAAC;QAC/CY,QAAQ,CAACE,MAAM,CAAC,aAAa,EAAE,IAAI,CAACf,UAAU,CAACE,WAAW,CAAC;QAC3DW,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAE,IAAI,CAACf,UAAU,CAACG,QAAQ,CAAC;QACrDU,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAE,IAAI,CAACf,UAAU,CAACI,MAAM,CAAC;QACjDS,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAE,IAAI,CAACP,SAAS,CAAC;QAExC,MAAMQ,QAAO,GAAI,MAAMlB,KAAK,CAACmB,IAAI,CAAC,aAAa,EAAEJ,QAAQ,EAAE;UACzDK,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,gBAAgB,EAAEC,aAAY,IAAK;YACjC,MAAMC,gBAAe,GAAIC,IAAI,CAACC,KAAK,CAAEH,aAAa,CAACI,MAAK,GAAI,GAAG,GAAIJ,aAAa,CAACK,KAAK,CAAC;YACvFC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEN,gBAAgB,CAAC;UACpD;QACF,CAAC,CAAC;QAEFxB,IAAI,CAAC+B,IAAI,CAAC;UACRC,IAAI,EAAE,SAAS;UACf5B,KAAK,EAAE,SAAS;UAChBM,IAAI,EAAES,QAAQ,CAACjB,IAAI,CAAC+B,OAAO;UAC3BC,iBAAiB,EAAE;QACrB,CAAC,CAAC;QACF,IAAI,CAACC,SAAS,CAAC,CAAC;MAClB,EAAE,OAAOC,KAAK,EAAE;QACdpC,IAAI,CAAC+B,IAAI,CAAC;UACRC,IAAI,EAAE,OAAO;UACb5B,KAAK,EAAE,OAAO;UACdM,IAAI,EAAE0B,KAAK,CAACjB,QAAQ,EAAEjB,IAAI,EAAE+B,OAAM,IAAK;QACzC,CAAC,CAAC;MACJ;IACF,CAAC;IACDI,gBAAgBA,CAACC,KAAK,EAAE;MACxB,IAAI,CAAC3B,SAAQ,GAAI2B,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IACxC,CAAC;IACCL,SAASA,CAAA,EAAG;MACV,IAAI,CAAChC,UAAS,GAAI;QAChBC,KAAK,EAAE,EAAE;QACTC,WAAW,EAAE,EAAE;QACfC,QAAQ,EAAE,EAAE;QACZC,MAAM,EAAE;MACV,CAAC;MACD,IAAI,CAACI,SAAQ,GAAI,IAAI;MACrB,IAAI,CAACC,cAAa,GAAI,KAAK;IAC7B;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}