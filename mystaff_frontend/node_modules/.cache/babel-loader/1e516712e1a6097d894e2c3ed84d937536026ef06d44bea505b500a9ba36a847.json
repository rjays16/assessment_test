{"ast":null,"code":"import Swal from 'sweetalert2';\nimport axios from '../../../axiosConfig';\nexport default {\n  data() {\n    return {\n      newVideo: {\n        title: '',\n        videoFile: null\n      },\n      isModalVisible: false,\n      videoError: ''\n    };\n  },\n  methods: {\n    showModal() {\n      this.isModalVisible = true;\n    },\n    async handleSubmit() {\n      if (!this.newVideo.videoFile) {\n        this.videoError = 'Please upload a valid video file.';\n        return;\n      }\n      try {\n        formData.append('title', this.newVideo.title);\n        formData.append('video', this.newVideo.videoFile);\n        const token = localStorage.getItem('token');\n        axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n        formData.append('video', videoFile);\n        if (!token) {\n          Swal.fire({\n            icon: 'error',\n            title: 'Error',\n            text: 'Authorization token is missing. Please log in again.'\n          });\n          return;\n        }\n        const config = {\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'multipart/form-data'\n          },\n          onUploadProgress: progressEvent => {\n            const percentCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n            console.log('Upload progress: ', percentCompleted);\n          }\n        };\n        const response = await axios.post('http://assessment.api/api/videos', formData, config);\n        Swal.fire({\n          icon: 'success',\n          title: 'Success',\n          text: response.data.message,\n          confirmButtonText: 'OK'\n        });\n        this.resetForm();\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Error',\n          text: error.response?.data?.message || 'An error occurred'\n        });\n      }\n    },\n    handleFileUpload(event) {\n      const file = event.target.files[0];\n      const validVideoTypes = ['video/mp4', 'video/avi', 'video/mkv', 'video/mov', 'video/webm'];\n      if (file && validVideoTypes.includes(file.type)) {\n        this.newVideo.videoFile = file;\n        this.videoError = '';\n      } else {\n        this.newVideo.videoFile = null;\n        this.videoError = 'Please upload a valid video file.';\n      }\n    },\n    resetForm() {\n      this.newVideo = {\n        title: '',\n        videoFile: null\n      };\n      this.videoError = '';\n      this.isModalVisible = false;\n    }\n  }\n};","map":{"version":3,"names":["Swal","axios","data","newVideo","title","videoFile","isModalVisible","videoError","methods","showModal","handleSubmit","formData","append","token","localStorage","getItem","defaults","headers","common","fire","icon","text","config","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","total","console","log","response","post","message","confirmButtonText","resetForm","error","handleFileUpload","event","file","target","files","validVideoTypes","includes","type"],"sources":["C:\\xampp\\htdocs\\assessment_test\\mystaff_frontend\\src\\components\\Modal\\AddModal.vue"],"sourcesContent":["<template>\r\n  <b-modal id=\"add-video-modal\" v-model=\"isModalVisible\" title=\"Add New Video\" @ok=\"handleSubmit\">\r\n    <b-form @submit.stop.prevent=\"handleSubmit\">\r\n      <b-form-group label=\"Title\" label-for=\"video-title\">\r\n        <b-form-input id=\"video-title\" v-model=\"newVideo.title\" required></b-form-input>\r\n      </b-form-group>\r\n      <b-form-group label=\"Video\" label-for=\"video\">\r\n        <input id=\"video\" type=\"file\" @change=\"handleFileUpload\" required>\r\n        <small class=\"text-danger\" v-if=\"videoError\"><br>{{ videoError }}</small>\r\n      </b-form-group>\r\n    </b-form>\r\n  </b-modal>\r\n</template>\r\n\r\n<script>\r\nimport Swal from 'sweetalert2';\r\nimport axios from '../../../axiosConfig';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      newVideo: {\r\n        title: '',\r\n        videoFile: null,\r\n      },\r\n      isModalVisible: false,\r\n      videoError: ''\r\n    };\r\n  },\r\n  methods: {\r\n    showModal() {\r\n      this.isModalVisible = true;\r\n    },\r\n    async handleSubmit() {\r\n      if (!this.newVideo.videoFile) {\r\n        this.videoError = 'Please upload a valid video file.';\r\n        return;\r\n      }\r\n\r\n      try {\r\n        \r\n        formData.append('title', this.newVideo.title);\r\n        formData.append('video', this.newVideo.videoFile);\r\n\r\n        const token = localStorage.getItem('token');\r\n        axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n\r\n        formData.append('video', videoFile);\r\n        if (!token) {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Error',\r\n            text: 'Authorization token is missing. Please log in again.'\r\n          });\r\n          return;\r\n        }\r\n\r\n        const config = {\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n            'Content-Type': 'multipart/form-data'\r\n          },\r\n          onUploadProgress: progressEvent => {\r\n            const percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\r\n            console.log('Upload progress: ', percentCompleted);\r\n          }\r\n        };\r\n\r\n        const response = await axios.post('http://assessment.api/api/videos', formData, config);\r\n\r\n        Swal.fire({\r\n          icon: 'success',\r\n          title: 'Success',\r\n          text: response.data.message,\r\n          confirmButtonText: 'OK',\r\n        });\r\n        this.resetForm();\r\n      } catch (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Error',\r\n          text: error.response?.data?.message || 'An error occurred'\r\n        });\r\n      }\r\n    },\r\n    handleFileUpload(event) {\r\n      const file = event.target.files[0];\r\n      const validVideoTypes = ['video/mp4', 'video/avi', 'video/mkv', 'video/mov', 'video/webm'];\r\n\r\n      if (file && validVideoTypes.includes(file.type)) {\r\n        this.newVideo.videoFile = file;\r\n        this.videoError = '';\r\n      } else {\r\n        this.newVideo.videoFile = null;\r\n        this.videoError = 'Please upload a valid video file.';\r\n      }\r\n    },\r\n    resetForm() {\r\n      this.newVideo = {\r\n        title: '',\r\n        videoFile: null,\r\n      };\r\n      this.videoError = '';\r\n      this.isModalVisible = false;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.text-danger {\r\n  color: #dc3545;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}